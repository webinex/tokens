"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/tokens/docs/getting-started","docId":"getting-started"},{"type":"link","label":"Built in Codes","href":"/tokens/docs/built-in-codes","docId":"built-in-codes"},{"type":"link","label":"Handling Exceptions","href":"/tokens/docs/handling-exceptions","docId":"handling-exceptions"},{"type":"link","label":"Usage with HttpClient","href":"/tokens/docs/usage-with-httpclient","docId":"usage-with-httpclient"}]},"docs":{"built-in-codes":{"id":"built-in-codes","title":"Built in Codes","description":"Bult-in codes","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting started","description":"Installation","sidebar":"tutorialSidebar"},"handling-exceptions":{"id":"handling-exceptions","title":"Handling Exceptions","description":"Coded exception middleware would handle all exceptions which appear in request pipeline, log it and send coded exception in HTTP response.","sidebar":"tutorialSidebar"},"usage-with-httpclient":{"id":"usage-with-httpclient","title":"Usage with HttpClient","description":"Webinex.Coded out of the box supports HttpClient. When remote service returns failed response with x-coded-failure HTTP header, than CodedExceptionHttpMessageHandler will deserialize coded exception payload and throw CodedException.","sidebar":"tutorialSidebar"}}}')}}]);